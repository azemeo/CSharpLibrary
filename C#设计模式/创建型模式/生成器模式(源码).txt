using System;
using System.Collections ;


	//投资项目
	public abstract class Equities 	{
		protected ArrayList array;
		public abstract string ToString();
	//----------	
		public ArrayList getNames() {
			return array;
		}
	//----------	
		public int count() {
			return array.Count ;
		}
	}
	//股票
	public class Stocks:Equities 	{
		public Stocks() 		{
			array = new ArrayList();
			array.Add ("Cisco");
			array.Add ("Coca Cola");
			array.Add ("GE");
			array.Add ("Harley Davidson");
			array.Add ("IBM");
			array.Add ("Microsoft");
		}
		public override string ToString() {
			return "Stocks";
		}
	}
	//债卷
	public class Bonds:Equities
	{
		public Bonds()
		{
			array = new ArrayList();
			array.Add ("CT GO 2005");
			array.Add ("NY GO 2012");
			array.Add ("GE Corp Bonds");
		}
		public override string ToString() {
			return "Bonds";
		}
	}
	
	//基金
	public class Mutuals:Equities
	{
		public Mutuals()
		{
			array = new ArrayList();
			array.Add ("Fidelity Magellan");
			array.Add ("Lindner");
			array.Add ("T Rowe Price");
			array.Add ("Vanguard Primecap");
			
		}
		public override string ToString() {
			return "Mutuals";
		}
	}
	//多种选择接口
	public interface MultiChoice
	{
		ArrayList getSelected();
		void clear();
		Panel getWindow();//到显示的面板
	}
	//复选控件
	public class CheckChoice:MultiChoice 	{
		private ArrayList stocks;//数据引表
		private Panel panel;
		private ArrayList boxes;//动态控件引用引用
	//------
		public CheckChoice(Equities stks) 		{
		stocks = stks.getNames ();
			panel = new Panel ();
			boxes = new ArrayList ();
			//add the check boxes to the panel
			for (int i=0; i< stocks.Count; i++) {
				CheckBox ck = new CheckBox ();
				//position them
				ck.Location = new Point (8, 16 + i * 32);
				string stk = (string)stocks[i];
				ck.Text =stk;
				ck.Size = new Size (112, 24);
				ck.TabIndex =0;
				ck.TextAlign = ContentAlignment.MiddleLeft ;
				boxes.Add (ck);
				panel.Controls.Add (ck);
			}
		}
		//------
		//取消复选状态
		public  void clear() {
			for(int i=0; i< boxes.Count; i++) {
			  CheckBox ck = (CheckBox)boxes[i];
				ck.Checked =false;
			}
		}
		//------
		//返回用户选择项的文本列表
		public ArrayList getSelected() {
			ArrayList sels = new ArrayList ();
			for(int i=0; i< boxes.Count ; i++) {
				CheckBox ck = (CheckBox)boxes[i];
				if (ck.Checked ) {
					sels.Add (ck.Text );
				}
			}
			return sels;
		}
		//------
		//得到复选框组的列表
		public Panel getWindow() {
			return panel;
		}
	}
	//列表控件
	public class ListChoice:MultiChoice {
		private ArrayList stocks;
		private Panel panel;
		private ListBox list;
	//------
		//constructor creates and loads the list box
		public ListChoice(Equities stks) {
			stocks = stks.getNames ();
			panel = new Panel ();
			list = new ListBox ();
			list.Location = new Point (16, 0);
			list.Size = new Size (120, 160);
			list.SelectionMode =SelectionMode.MultiExtended ;
			list.TabIndex =0;
			panel.Controls.Add (list);
			for(int i=0; i< stocks.Count ; i++) {
				list.Items.Add (stocks[i]);
			}
		}
		//returns the Panel
		//------
		public  Panel getWindow() {
			return panel;
		}
		//returns an array of selected elements
		//------
		public ArrayList getSelected() {
			ArrayList sels = new ArrayList ();
			ListBox.SelectedObjectCollection  coll = list.SelectedItems  ;
			for(int i=0; i< coll.Count; i++) {
				string item = (string)coll[i];
					sels.Add (item );
				}
		return sels;	
		}
		//------	
		//clear selected elements
		public void clear() { 
			list.Items.Clear();
		}
	}
	//生成器关键
	public class StockFactory
	{
		//决定返回图形控件
		public static MultiChoice getBuilder(Equities stocks)
		{
			if (stocks.count ()<=3) {
				return new CheckChoice (stocks);
			}
			else {
				return new ListChoice(stocks);
			}
		}
	}
界面
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;

	/// <summary>
	/// Summary description for Form1.
	/// </summary>
	public class WealthBuilder : Form 	{
		private ListBox lsEquities;
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private Container components = null;
		private Button btPlot;
		private Panel pnl;
		private MultiChoice mchoice;
		private void init() {
			lsEquities.Items.Add (new Stocks());
			lsEquities.Items.Add (new Bonds());
			lsEquities.Items.Add (new Mutuals());
		}
		public WealthBuilder()
		{
			InitializeComponent();
			init();
		}

		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if (components != null) 
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}
		private void setPanel() {
     		pnl.Location = new Point(152, 24);
			pnl.Size = new Size(128, 168);
			pnl.TabIndex = 1;
			Controls.Add(pnl);
		}


		#region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.lsEquities = new System.Windows.Forms.ListBox();
			this.btPlot = new System.Windows.Forms.Button();
			this.SuspendLayout();
			// 
			// lsEquities
			// 
			this.lsEquities.ItemHeight = 12;
			this.lsEquities.Location = new System.Drawing.Point(16, 26);
			this.lsEquities.Name = "lsEquities";
			this.lsEquities.Size = new System.Drawing.Size(107, 124);
			this.lsEquities.TabIndex = 0;
			this.lsEquities.SelectedIndexChanged += new System.EventHandler(this.lsEquities_SelectedIndexChanged);
			// 
			// btPlot
			// 
			this.btPlot.Location = new System.Drawing.Point(221, 224);
			this.btPlot.Name = "btPlot";
			this.btPlot.Size = new System.Drawing.Size(77, 26);
			this.btPlot.TabIndex = 1;
			this.btPlot.Text = "Plot";
			this.btPlot.Click += new System.EventHandler(this.btPlot_Click);
			// 
			// WealthBuilder
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(6, 14);
			this.ClientSize = new System.Drawing.Size(374, 263);
			this.Controls.Add(this.btPlot);
			this.Controls.Add(this.lsEquities);
			this.Name = "WealthBuilder";
			this.Text = "Stock analysis";
			this.Load += new System.EventHandler(this.WealthBuilder_Load);
			this.ResumeLayout(false);

		}
		#endregion

		/// <summary>
		/// The main entry point for the application.
		/// </summary>
		[STAThread]
		static void Main() 
		{
			Application.Run(new WealthBuilder());
		}

		private void lsEquities_SelectedIndexChanged(object sender, System.EventArgs e) {
			int i = lsEquities.SelectedIndex ;
			Equities eq = (Equities)lsEquities.Items[i];
			mchoice= StockFactory.getBuilder (eq);
			this.Controls.Remove (pnl);
			pnl = mchoice.getWindow ();
			setPanel();
		}

		private void btPlot_Click(object sender, System.EventArgs e) {
			//display the selected items in a message box
			if(mchoice != null) {
				ArrayList ar  = mchoice.getSelected ();
				string ans = "";
				for(int i=0; i< ar.Count ; i++) {
					ans += (string)ar[i] +" ";
				}
				MessageBox.Show (null, ans, "Selected equities", MessageBoxButtons.OK  );
			}
		}

		private void WealthBuilder_Load(object sender, System.EventArgs e)
		{
		
		}
	}

