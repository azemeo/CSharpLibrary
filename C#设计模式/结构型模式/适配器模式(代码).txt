1.CodeFile1.cs

using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;

namespace TestAda
{
	//测试数据类
	public class Person
	{
		private string yourname="";
		//姓名
		public string YourName
		{
			get
			{
				return yourname;
			}
			set
			{
				yourname=value;
			}
		}
		//年龄
		private int age=0;
		public int Age
		{
			get
			{
				return age;
			}
			set
			{
				age=value;
			}
		}
		//构造函数
		public Person(string yourname,int age)
		{
			this.yourname=yourname;
			this.age=age;		
		}
		
	}
	//适配器接口
	public interface LstAdapter 	
	{
		void Add(Person p) ;
		int SelectedIndex() ;
		void Clear() ;
		void clearSelection() ;
	}
	//列表适配器
	public class ListAdapter:LstAdapter
	{
		private ListBox listbox;
		public ListAdapter(ListBox lb) 		
		{
			listbox = lb;
		}
		public void Add(string s) 
		{
			listbox.Items.Add (s);
		}
		public void Add(Person p) 
		{
			listbox.Items.Add (p.YourName+"\t"+p.Age.ToString());
		}
		public int SelectedIndex() 
		{
			return listbox.SelectedIndex;
		}
		public void Clear() 
		{
			listbox.Items.Clear ();
		}
		public void clearSelection() 
		{
			int i = SelectedIndex();
			if(i >= 0) 
			{
				listbox.SelectedIndex =-1;
			}
		}
	}
	//树型适配器
	public class TreeAdapter:LstAdapter 	
	{
		private TreeView tree;
		//------
		public TreeAdapter(TreeView tr) 		
		{
			tree=tr;
		}
		//------
		public void Add(Person p) 
		{
			TreeNode nod;
			//add a root node  
			nod = tree.Nodes.Add(p.YourName);
			//add a child node to it
			nod.Nodes.Add(p.Age.ToString());
			tree.ExpandAll ();
		}
		//------
		public int SelectedIndex() 
		{
			return tree.SelectedNode.Index ;
		}
		//------
		public void Clear() 
		{
			TreeNode nod;
			for (int i=0; i< tree.Nodes.Count ; i++) 
			{
				nod = tree.Nodes [i];
				nod.Remove ();
			}
		}
		//------
		public void clearSelection() {}
	}
}
2.Form1.cs
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;

namespace TestAda
{
	/// <summary>
	/// 结构型模式(适配器)。
	/// </summary>
	public class Form1 : System.Windows.Forms.Form
	{
		private System.Windows.Forms.ListBox listBox1;
		private System.Windows.Forms.TreeView treeView1;
		private System.Windows.Forms.Button btAdd;
		/// <summary>
		/// 必需的设计器变量。
		/// </summary>
		private System.ComponentModel.Container components = null;

		public Form1()
		{
			//
			// Windows 窗体设计器支持所必需的
			//
			InitializeComponent();

			//
			// TODO: 在 InitializeComponent 调用后添加任何构造函数代码
			//
			init();
		}
		//测试数据
		Person p1=new Person("Gelifeng",28);
		Person p2=new Person("Chihuiying",24);
		Person p3=new Person("Geliwei",20);
		
		ListAdapter la=null;//列表适配器
		TreeAdapter ta=null;//树形适配器
		private void init() 
		{
			la= new ListAdapter (listBox1);
			ta= new TreeAdapter (treeView1);
			reload();
		}
	
		private void reload() 
		{
			//初始化树形适配器
			la.Clear ();
			la.Add(p1.YourName);
			la.Add(p2.YourName);
			la.Add(p3.YourName);		
		
		}

		/// <summary>
		/// 清理所有正在使用的资源。
		/// </summary>
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if (components != null) 
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region Windows 窗体设计器生成的代码
		/// <summary>
		/// 设计器支持所需的方法 - 不要使用代码编辑器修改
		/// 此方法的内容。
		/// </summary>
		private void InitializeComponent()
		{
			this.listBox1 = new System.Windows.Forms.ListBox();
			this.treeView1 = new System.Windows.Forms.TreeView();
			this.btAdd = new System.Windows.Forms.Button();
			this.SuspendLayout();
			// 
			// listBox1
			// 
			this.listBox1.ItemHeight = 12;
			this.listBox1.Location = new System.Drawing.Point(24, 32);
			this.listBox1.Name = "listBox1";
			this.listBox1.Size = new System.Drawing.Size(121, 136);
			this.listBox1.TabIndex = 0;
			// 
			// treeView1
			// 
			this.treeView1.ImageIndex = -1;
			this.treeView1.Location = new System.Drawing.Point(240, 32);
			this.treeView1.Name = "treeView1";
			this.treeView1.SelectedImageIndex = -1;
			this.treeView1.Size = new System.Drawing.Size(121, 136);
			this.treeView1.TabIndex = 1;
			// 
			// btAdd
			// 
			this.btAdd.Location = new System.Drawing.Point(160, 48);
			this.btAdd.Name = "btAdd";
			this.btAdd.TabIndex = 2;
			this.btAdd.Text = "Test";
			this.btAdd.Click += new System.EventHandler(this.btAdd_Click);
			// 
			// Form1
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(6, 14);
			this.ClientSize = new System.Drawing.Size(400, 214);
			this.Controls.Add(this.btAdd);
			this.Controls.Add(this.treeView1);
			this.Controls.Add(this.listBox1);
			this.Name = "Form1";
			this.Text = "Form1";
			this.Load += new System.EventHandler(this.Form1_Load);
			this.ResumeLayout(false);

		}
		#endregion

		/// <summary>
		/// 应用程序的主入口点。
		/// </summary>
		[STAThread]
		static void Main() 
		{
			Application.Run(new Form1());
		}

		private void Form1_Load(object sender, System.EventArgs e)
		{
			
		}

		private void btAdd_Click(object sender, System.EventArgs e)
		{
			//根据用户选择向树形控件增加详细
			int i = listBox1.SelectedIndex;
			if( i >= 0) 
			{
				Person p=null;
				if(i==0)
					p=p1;
				else if(i==1)
					p=p2;
				else
					p=p3;
				ta.Add (p);//向树形知配器增加
				la.clearSelection ();//清理列表适配器
			}
		}
	}
}
