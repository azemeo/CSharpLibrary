通过面板上放按钮，来实现。

1.窗体类
public class Form1 : System.Windows.Forms.Form
	{
		private System.Windows.Forms.Button btQuit;
		private System.Windows.Forms.Button btButtonA;
		private CoolDecorator cdec, cqdec;
		private System.Windows.Forms.Button btButtonB;
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.Container components = null;
//------------------------------
		public Form1()
		{
			
			InitializeComponent();
			init();
        }
		//------------------------------
		private void init() {
			//create a cool decorator
			cdec = new CoolDecorator (btButtonA);//将按钮任为参数
			cqdec= new CoolDecorator(btButtonB);
			//add outside decorator to the layout 
			//and remove the button from the layout
			this.Controls.AddRange(new System.Windows.Forms.Control[] {cdec, cqdec});
			this.Controls.Remove (btButtonA);//将按钮从控件集中去掉
			this.Controls.Remove (btButtonB);
			
			//this.Controls.AddRange(new System.Windows.Forms.Control[] {cdec});
			
		}
}
2.Decorator.cs
using System;
using System.Drawing ;
using System.Windows.Forms ;
namespace CoolDec
{
	/// <summary>
	/// 装饰抽象接口.
	/// </summary>
	public interface Decorator 	{
		void mouseMove(object sender, MouseEventArgs e);//鼠标的移动
		void mouseEnter(object sender, EventArgs e);//鼠标的进入
		void mouseLeave(object sender, EventArgs e);//鼠标的离开
		void paint(object sender, PaintEventArgs e);//鼠标的重画
	}
}

3.CoolDecorator.cs
using System;
using System.Windows.Forms;
using System.Drawing ;
namespace CoolDec
{
	/// <summary>
	/// 酷按钮.
	/// </summary>
	public class CoolDecorator :Panel, Decorator
	{
		protected Control contl;
		protected Pen bPen, wPen, gPen;
		private bool mouse_over; //鼠标在按钮上标志
		protected float x1, y1, x2, y2;
		//----------------------------------
			public CoolDecorator(Control c) {
				contl = c;		//copy in control
				//add button to controls contained in panel
				this.Controls.AddRange(new Control[] {contl});
				locate(c.Location );
				this.Name = "deco"+contl.Name ;
				this.Size = contl.Size;
				x1 = c.Location.X - 1;
				y1 = c.Location.Y - 1;
				x2 = c.Size.Width;
				y2 = c.Size.Height;
							
				//create the overwrite pens
				gPen = new Pen(c.BackColor, 2);	//灰边
				bPen = new Pen(Color.Black , 1);//黑边
				wPen = new Pen(Color.White, 1);//白边
		
				//mouse over, enter handler
				EventHandler evh = new EventHandler(mouseEnter);
				c.MouseHover += evh;
				c.MouseEnter+= evh;
				//mouse move handler
				c.MouseMove += new MouseEventHandler(mouseMove);
				c.MouseLeave += new EventHandler(mouseLeave);
				//paint handler catches button's paint
				c.Paint += new PaintEventHandler( paint);
				
		}
		//------------------------------
		public void locate(Point p) {
			//moves panel to button position
			this.Location = p;
			contl.Location =new Point(0,0);
			x1 = p.X ;
			y1 = p.Y ;
		}
		//------------------------------
		public virtual void locate(Control c) {
			this.Location = c.Location;
			c.Location =new Point (0,0);
			x1 = c.Location.X - 1;
			y1 = c.Location.Y - 1;
			x2 = c.Size.Width;
			y2 = c.Size.Height;
			
		}
		//------------------------------
		public void mouseMove(object sender, MouseEventArgs e){
			mouse_over = true;
		}
		//------------------------------
		public void mouseEnter(object sender, EventArgs e){
			mouse_over = true;
			this.Refresh ();
		}
		//------------------------------
		public void mouseLeave(object sender, EventArgs e){
			mouse_over = false;
			this.Refresh ();
		}
		//------------------------------
		public virtual void paint(object sender, PaintEventArgs e){
			//draw over button to change its outline
			Graphics g = e.Graphics;
			const int  d = 1;
			//总画灰线
			g.DrawRectangle(gPen, 0, 0, x2 - 1, y2 - 1);
			//如果鼠标在按钮上,左上画黑线，右下画白线。
			if( mouse_over) {
				g.DrawLine(bPen, 0, 0, x2 - d, 0);
				g.DrawLine(bPen, 0, 0, 0, y2 - 1);
				g.DrawLine(wPen, 0, y2 - d, x2 - d, y2 - d);
				g.DrawLine(wPen, x2 - d, 0, x2 - d, y2 - d);
			}
		}
	}
	}
