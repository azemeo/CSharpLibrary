		// Define DrawImageAbort callback method.
		private bool DrawImageCallback(IntPtr callBackData)
		{
			// Test for call that passes callBackData parameter.
			if(callBackData==IntPtr.Zero)
			{
				// If no callBackData passed, abort DrawImage method.
				return true;
			}
			else
			{
				// If callBackData passed, continue DrawImage method.
				return false;
			}
		}
//		public void DrawImageRect4FloatAttribAbortData(PaintEventArgs e)
//		{
//			//效果好
//			// 建立回调方法.
//			Graphics.DrawImageAbort imageCallback		= new Graphics.DrawImageAbort(DrawImageCallback);
//			IntPtr imageCallbackData = new IntPtr(1);
//			// 从文件中读出图像.
//			Image newImage = Image.FromFile(@"D:\TestJpg\1.jpg");
//			// 生成原始大小源图像destRect1(程序测试)
//			Rectangle destRect1 = new Rectangle(0, 0, 1600, 1200);
//			// 原始图像的坐标.
//			float x = 0.0F;
//			float y = 0.0F;
//			float width = 1600.0F;
//			float height = 1200.0F;
//			GraphicsUnit units = GraphicsUnit.Pixel;
//			// 画原始图像到画布.
//			e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);
//			// 建立准备生成图像的大小(用户设定).
//			Rectangle destRect2 = new Rectangle(0, 0, 640, 480);
//			// Create image attributes and set large gamma.
//			ImageAttributes imageAttr = new ImageAttributes();
//			//imageAttr.SetGamma(4.0F);
//			// Draw adjusted image to screen.
//			try
//			{
//				checked
//				{
//					// 在画布上画出缩小/放大图像.
//					e.Graphics.DrawImage(
//						newImage,
//						destRect2,
//						x, y,
//						width, height,
//						units,
//						imageAttr,
//						imageCallback,
//						imageCallbackData);
//				}
//				
//			}
//			catch (Exception ex)
//			{
//				e.Graphics.DrawString(
//					ex.ToString(),
//					new Font("Arial", 8),
//					Brushes.Black,
//					new PointF(0, 0));
//			}
//		}