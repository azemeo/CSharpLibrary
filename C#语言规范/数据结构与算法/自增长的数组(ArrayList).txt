ArrayList：可存储不同类型数据、自增长的数组

数组在设计时受到一些限制，因为一维数组只能存储相同类型的数据，而且在使用数组时，必须为数组定义特定的长度。很多时候，开发人员要求数组更加灵活，它可以存储不同类型的数据，也不用去关心数组空间的分配.
数据结构――System.Collections.ArrayList
ArrayList提供了标准数组所不具备的自增长灵活性，但这种灵活性是以牺牲性能为代价的
ArrayList的渐近运行时间和标准数组一样。即使对ArrayList的操作是高开销的，尤其是存储值类型，其元素个数和每次操作的代价之间的关系与标准数组相同。
在ArrayList中使用值类型，将额外进行封箱(boxing)和撤箱(unboxing)操作，当你的应用程序是一个很大的ArrayList，并频繁进行读写操作时，会很大程度上影响程序性能。对于引用类型而言，ArrayList和数组的内存分配是相同的