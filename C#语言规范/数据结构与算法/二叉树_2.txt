二叉树。就像线形排列数据的数组一样，我们可以将二叉树想象为以二维方式来存储数据。其中一种特殊的二叉树，我们称为二叉搜索树（binary search tree），简称为BST，它的数据搜索能力比一般数组更加优化.

它以一种非线性的方式存储数据

有的树都有如下共同的特性：

1、只有一个根；

2、除了根节点，其他所有节点又且只有一个父节点；

3、没有环结构。从任意一个节点开始，都没有回到起始节点的路径。正是前两个特性保证没有环结构的存在


二叉树是一种特殊的树，因为它的所有节点最多只能有两个子节点。并且，对于二叉树中指定的节点，第一个子节点必须指向左孩子，第二个节点指向右孩子
没有孩子的节点称为叶节点。有孩子的节点称为内节点.


概念:
树:
节点:
根(根节点):
父节点:
子节点(叶节点,内节点)

，如果二叉树的定位时间为线性，查询时间也为线性，那怎么说二叉树比数组更好呢？因为数组的查询时间虽然也是线性，但定位时间却是常量啊？是的，一般的二叉树确实不能提供比数组更好的性能。然而当我们有技巧地排列二叉树中的元素时，我们就能很大程度改善查询时间（当然，定位时间也会得到改善）。

二叉搜索树是一种特殊的二叉树，它改善了二叉树数据搜索的效率。二叉搜索树有以下属性：对于任意一个节点n，其左子树下的每个后代节点的值都小于节点n的值；而其右子树下的每个后代节点的值都大于节点n的值。

搜索BST所耗费的时间要依赖于它的拓扑结构。最佳情况下 时音复杂度log2n，最坏情况则要耗费线性时间.




